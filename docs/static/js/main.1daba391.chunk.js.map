{"version":3,"sources":["components/Radar/DetailSection.js","components/Radar/d3/QuadrantHoverEffect.ts","components/Radar/d3/DrawBackgroundCirclesAndAxis.ts","components/Radar/d3/DrawBlips.ts","components/Radar/d3/ForceOfWithinQuadrant.ts","components/Radar/d3/ForceOfPlaceholdingCirclesTailingDad.ts","components/Radar/index.tsx","components/Radar/d3/InitateSvg.ts","components/Radar/d3/DrawQuadrantLabels.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["DetailSection","this","setState","open","state","props","quadrantName","flipped","entries","expand","onClickBlip","clickedBlip","expandDesc","entry","quadrantIndex","name","blipDescDynamicStyle","maxHeight","Math","ceil","desc","length","marginBottom","className","style","width","transform","map","id","key","onClick","quadrant","Component","defaultProps","hoverInQuadrantEffect","rootSVGGroupToDraw","selectAll","transition","duration","d","i","select","attr","hoverOutQuadrantEffect","height","radius","quadrantNames","hoverOnQuadrant","quadrantCount","arcs","d3","Array","fill","backgroundSVGGroup","append","data","enter","on","_","annulusIndex","focus","cornerRadiusValue","padAngleValue","outerRadiusValue","innerRadiusValue","padAngle","innerRadius","cornerRadius","outerRadius","arcConfig","attachSimulationDataToBlips","blips","blipShapes","shapeName","uniqueQuadrantNames","from","Set","blip","minAndMaxOfBlipScore","score","reduce","acc","cur","min","max","Infinity","scoreToRadiusScale","domain","range","indexOf","distanceToCenter","collideRadius","x","y","vx","vy","clickOnBlip","color","enhancedBlips","eachBlip","eachBlipSymbol","document","createElementNS","svg","toString","eachBlipText","text","blipSymbolBBox","index","nodes","getBBox","blipTextBBox","positionSymbolAndText","withPlaceholdingCircles","eachPlaceholdingCircle","radialSimulation","force","forEach","node","initialize","forceOfWithinQuandrant","alphaDecay","textPlaceHoldingCircleNodes","flatMap","placeholdingCircleAmount","floor","keys","nthForBlip","dad","nth","blipsAndTextPlaceHoldingCircleNodes","concat","collideAvoidSimulation","strength","hasOwnProperty","dadX","dadY","dadCollideRadius","nodeCollideRadius","forceOfPlaceholdingCirclesTailingDad","Radar","svgId","simulationRefs","highlightedQuadrantIndex","bind","prevQuadrant","prevName","dimensionalSizes","remove","initateSvg","drawBackgroundCirclesAndAxis","stop","highlightQuadrant","eachQuadrantLabel","sin","PI","toUpperCase","quadrantLabelBBox","drawQuadrantLabels","newSimulations","drawBlips","drawSVGBackground","drawQuadrantLabelsAndBlips","prevProps","filter","detailedSection","defaultBlips","App","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1daba391.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nimport './DetailSection.css'\n\n\nclass DetailSection extends Component {\n  toggleDesc() {\n    this.setState({\n      open: !this.state.open\n    })\n  }\n\n  componentDidMount() {\n  }\n\n  render() {\n    const { quadrantName, flipped, entries, expand, onClickBlip, clickedBlip } = this.props\n\n    const expandDesc = entry => clickedBlip && clickedBlip.quadrantIndex === entry.quadrantIndex && clickedBlip.name === entry.name\n    const blipDescDynamicStyle = entry => ({\n      maxHeight: expandDesc(entry) ? (10 + 24 * Math.ceil(entry.desc.length / 20.0)) : 0,\n      marginBottom: expandDesc(entry) ? 10 : 0,\n    })\n\n    return (\n      <section\n        className='DetailSection-root'\n        style={{\n          width: expand ? 200 : 0,\n          transform: flipped ? 'scale(-1, 1)' : null,\n        }}\n        >\n        <span\n          className='DetailSection-quadrantName'\n          style={{ transform: flipped ? 'scale(-1, 1)' : null }}\n          >\n          {quadrantName}\n        </span>\n        <div className='DetailSection-entrie'>\n          {entries.map((entry, id) => (\n            <div\n              className='DetailSection-entry'\n              style={{ transform: flipped ? 'scale(-1, 1)' : null }}\n              key={id}\n              >\n              <span className='DetailSection-blipName' onClick={() => onClickBlip(entry.quadrant, entry.name)}>{entry.name}</span>\n              <p className='DetailSection-desc' style={blipDescDynamicStyle(entry)}>{entry.desc}</p>\n            </div>\n          ))}\n        </div>\n\n      </section>\n    )\n  }\n}\n\nDetailSection.defaultProps = {\n  flipped: false\n}\n\nDetailSection.propTypes = {\n  quadrantName: PropTypes.string.isRequired,\n  entries: PropTypes.array.isRequired,\n  expand: PropTypes.bool.isRequired,\n  onClickBlip: PropTypes.func,\n  clickedBlip: PropTypes.object,\n  flipped: PropTypes.bool,\n}\n\n\nexport default DetailSection\n","\nexport const hoverInQuadrantEffect = (\n  rootSVGGroupToDraw: d3.Selection<SVGGElement, unknown, HTMLElement, any>,\n  quadrantIndex: number\n): void => {\n  rootSVGGroupToDraw.selectAll(`.quadrant-${quadrantIndex} path`)\n                    .transition()\n                    .duration(100)\n                    .style('fill-opacity', (d, i) => (1 - 0.2 * i))\n\n  rootSVGGroupToDraw.select(`g.quadrant-labels > text.quadrant-label-${quadrantIndex}`)\n                    .transition()\n                    .duration(100)\n                    .attr('font-weight', 700)\n}\n\nexport const hoverOutQuadrantEffect = (\n  rootSVGGroupToDraw: d3.Selection<SVGGElement, unknown, HTMLElement, any>,\n  quadrantIndex: number\n): void => {\n  rootSVGGroupToDraw.selectAll(`.quadrant-${quadrantIndex} path`)\n                    .transition()\n                    .duration(100)\n                    .style('fill-opacity', (d, i) => (0.7 - 0.2 * i))\n\n   rootSVGGroupToDraw.select(`g.quadrant-labels > text.quadrant-label-${quadrantIndex}`)\n                     .transition()\n                     .duration(100)\n                     .attr('font-weight', 200)\n}\n","import * as d3 from 'd3'\nimport {\n  hoverInQuadrantEffect,\n  hoverOutQuadrantEffect,\n} from './QuadrantHoverEffect'\n\nexport default (\n  rootSVGGroupToDraw: d3.Selection<SVGGElement, unknown, HTMLElement, any>, \n  width: number,\n  height: number,\n  radius: number, \n  quadrantNames: string[],\n  hoverOnQuadrant: (quadrantIndex: number) => void\n): void => {\n  const quadrantCount = quadrantNames.length\n\n  const arcs = d3.pie()(new Array(quadrantCount).fill(1))\n\n  const arcConfig = (\n    annulusIndex: number, \n    focus: boolean = false\n  ): d3.Arc<any, d3.DefaultArcObject> => { // Relationship between padAngle and radius see: https://github.com/d3/d3-shape#arc_padAngle\n    const cornerRadiusValue = annulusIndex === 2 ? 4 : 0\n    let padAngleValue = (1.0 / (annulusIndex + 1)) * 0.01\n    let outerRadiusValue = radius / 3 * (annulusIndex + 1)\n    let innerRadiusValue = 3\n\n    if (focus) {\n      innerRadiusValue = innerRadiusValue  + 14\n      padAngleValue = padAngleValue * 14\n      outerRadiusValue = outerRadiusValue + 14\n    }\n    return d3.arc()\n             .padAngle(padAngleValue)\n             .innerRadius(innerRadiusValue)\n             .cornerRadius(cornerRadiusValue)\n             .outerRadius(outerRadiusValue)\n  }\n\n  const backgroundSVGGroup = rootSVGGroupToDraw.append('g').attr('class', 'background')\n\n  backgroundSVGGroup.append('g')\n                      .attr('class', 'quadrant-rect-backdrop')\n                      .selectAll('rect')\n                      .data(quadrantNames)\n                      .enter()\n                        .append('rect')\n                        .attr('x', (d, i) => i === 0 || i === 1 ? 0 : - width / 2)\n                        .attr('y', (d, i) => i === 1 || i === 2 ? 0 : - height / 2)\n                        .attr('width', width / 2)\n                        .attr('height', height / 2)\n                        .attr('fill-opacity', 0)\n                        .style('z-index', -100)\n                        .on('mouseover', (d, i) => {\n                          hoverInQuadrantEffect(rootSVGGroupToDraw, i)\n                          hoverOnQuadrant(i)\n                        })\n                        .on('mouseout', (d, i) => {\n                          hoverOutQuadrantEffect(rootSVGGroupToDraw, i)\n                        })\n\n  const quadrantSVGGroup = backgroundSVGGroup.append('g').attr('class', 'background-circle')\n                                             .selectAll('path')\n                                             .data(arcs)\n                                             .enter()\n                                               .append('g')\n                                               .attr('class', (d, i) => `quadrant-${i}`)\n\n  quadrantSVGGroup.selectAll('path')\n                  .data((d, i) => [{d, i}, {d, i}, {d, i}])\n                  .enter().append('path')\n                  .attr('class', (_, i) => `annulus-${i}`)\n                  .style('fill', '#AAAAAA')\n                  .attr('d', ({ d }, i) => (arcConfig(i) as any)(d) )\n                  .style('fill-opacity', (d, i) => (0.7 - 0.2 * i))\n                  .style('z-index', 0)\n                  .on('mouseover', ({ i }) => {  // i is quadrant index, j is annulusIndex\n                    hoverInQuadrantEffect(rootSVGGroupToDraw, i)\n                    hoverOnQuadrant(i)\n                  })\n                  .on('mouseout', ({ i }) => {\n                    hoverOutQuadrantEffect(rootSVGGroupToDraw, i)\n                  })\n}\n","import * as d3 from 'd3'\nimport { Blip } from '..'\n\nimport forceOfWithinQuandrant from './ForceOfWithinQuadrant'\nimport forceOfPlaceholdingCirclesTailingDad from './ForceOfPlaceholdingCirclesTailingDad'\nimport {\n  hoverInQuadrantEffect,\n  hoverOutQuadrantEffect\n} from './QuadrantHoverEffect'\n\n\nexport interface BlipSimulationNode extends Blip { \n  x: number,\n  y: number,\n  vx: number,\n  vy: number,\n  distanceToCenter: number,\n  quadrantIndex: number,\n  shapeName: string,\n  collideRadius: number,\n}\n\nexport interface TextPlaceholdingCircleSimulationNode { \n  dad: BlipSimulationNode;\n  nth: number;\n  collideRadius: number;\n  x: number;\n  y: number;\n}\n\nexport interface CollideAvoidNode {\n  x: number;\n  y: number;\n  collideRadius: number;\n}\n\nconst attachSimulationDataToBlips = (\n  radius: number,\n  blips: Blip[]\n): BlipSimulationNode[] => {\n  const blipShapes = [ { shapeName: 'rect', }, { shapeName: 'circle', } ]\n\n  const uniqueQuadrantNames = [...Array.from(new Set(blips.map(blip => blip.quadrant)))]\n  const minAndMaxOfBlipScore = blips.map(blip => blip.score)\n                                    .reduce((acc, cur) => {\n                                      return [Math.min(acc[0], cur), Math.max(acc[1], cur)]\n                                    }, [Infinity, -Infinity])\n  const scoreToRadiusScale = d3.scaleLinear()\n                               .domain(minAndMaxOfBlipScore)\n                               .range([radius, 50])\n\n  return blips.map(blip => {\n    const quadrantIndex = uniqueQuadrantNames.indexOf(blip.quadrant)\n    return {\n      ...blip,\n      distanceToCenter: scoreToRadiusScale(blip.score),\n      quadrantIndex,\n      ...blipShapes[quadrantIndex % blipShapes.length],\n      collideRadius: 0, // will set later via reflection\n      x: 0,\n      y: 0,\n      vx: 0,\n      vy: 0,\n    }\n  })\n}\n\nexport default (\n  rootSVGGroupToDraw: d3.Selection<SVGGElement, unknown, HTMLElement, any>, \n  radius: number, \n  blips: Blip[], \n  hoverOnQuadrant: (quadrantIndex: number) => void, \n  clickOnBlip: (quadrant: string, name: string) => void\n) => {\n  const color = d3.scaleOrdinal(d3.schemeCategory10)\n  const enhancedBlips = attachSimulationDataToBlips(radius, blips)\n\n  const blipsSVGGroup = rootSVGGroupToDraw.append('g')\n                                          .attr('class', 'blips')\n\n  const eachBlip = blipsSVGGroup.selectAll('g.blip')\n                                .data(enhancedBlips)\n                                .enter()\n                                  .append('g')\n                                  .attr('class', 'blip')\n                                  .attr('quadrant-name', d => d.quadrant)\n                                  .attr('quadrant-index', d => d.quadrantIndex)\n                                  .style('cursor', 'pointer')\n                                  .style('pointer-events', 'click')\n                                  .on('mouseover', ({ quadrantIndex }) => {\n                                    hoverInQuadrantEffect(rootSVGGroupToDraw, quadrantIndex)\n                                    hoverOnQuadrant(quadrantIndex)\n                                  })\n                                  .on('mouseout', ({ quadrantIndex}) => {\n                                    hoverOutQuadrantEffect(rootSVGGroupToDraw, quadrantIndex)\n                                  })\n                                  .on('click', ({ quadrant, name }) => {\n                                    clickOnBlip(quadrant, name)\n                                  })\n\n  const eachBlipSymbol = eachBlip.append(d => document.createElementNS(d3.namespaces.svg, d.shapeName))\n                                 .attr('class', 'blip-element blip-symbol')\n                                 .style('fill', d => color(d.quadrantIndex.toString()))\n                                 .attr('width', 22)\n                                 .attr('height', 22)\n                                 .attr('r', 12)\n                                 .attr('rx', '0.4em')\n                                 .attr('ry', '0.4em')\n\n  const eachBlipText = eachBlip.append('text')\n                               .attr('class', 'blip-element blip-text')\n                               .text(d => d.name)\n\n  const blipSymbolBBox = (index: number) => (eachBlipSymbol.nodes()[index] as SVGGraphicsElement).getBBox()\n  const blipTextBBox = (index: number) => (eachBlipText.nodes()[index] as SVGGraphicsElement).getBBox()\n                             \n  const positionSymbolAndText = (withPlaceholdingCircles: boolean) => () => {\n    eachBlipSymbol.attr('x', ({ x }, i) => x - blipSymbolBBox(i).width / 2)\n                  .attr('y', ({ y }, i) => y - blipSymbolBBox(i).height / 2)\n                  .attr('cx', ({ x }) => x)\n                  .attr('cy', ({ y }) => y)\n\n    eachBlipText.attr('x', ({ quadrantIndex, x }, i) => (quadrantIndex === 0 || quadrantIndex === 1) ? (x + blipSymbolBBox(i).width / 2) : (x - blipTextBBox(i).width - blipSymbolBBox(i).width / 2))\n                .attr('y', ({ quadrantIndex, y }, i) => (quadrantIndex === 1 || quadrantIndex === 2) ? (y + blipTextBBox(i).height / 2) : y)\n\n    if (withPlaceholdingCircles) {\n      eachPlaceholdingCircle.attr('cx', ({ x }) => x)\n                            .attr('cy', ({ y }) => y)\n    }\n  }\n\n  const radialSimulation = d3.forceSimulation(enhancedBlips)\n                             .force('radial', d3.forceRadial(d => (d as BlipSimulationNode).distanceToCenter))\n                             .force('in-quandrant', forceOfWithinQuandrant())\n                             .on('tick', positionSymbolAndText(false))\n                             .alphaDecay(0.01)\n\n                       \n  const BLIP_COLLIDE_RADIUS_MARGIN = 10\n  const textPlaceHoldingCircleNodes: TextPlaceholdingCircleSimulationNode[] = enhancedBlips.flatMap((blip, index) => {\n    blip.collideRadius = Math.max(\n      blipSymbolBBox(index).width,\n      blipSymbolBBox(index).height\n    ) / 2 + BLIP_COLLIDE_RADIUS_MARGIN\n\n    let placeholdingCircleAmount = 0\n    if (blipTextBBox(index).height !== 0) {\n      placeholdingCircleAmount = Math.floor(blipTextBBox(index).width / blipTextBBox(index).height)\n    }\n\n    return [\n      ...[...Array.from(Array(placeholdingCircleAmount).keys())].map(nthForBlip => ({\n        dad: blip,\n        nth: nthForBlip,\n        collideRadius: blipTextBBox(index).height / 2,\n        x: 0,\n        y: 0,\n      }))\n    ]\n  })\n\n  const eachPlaceholdingCircle = rootSVGGroupToDraw.select('g.blips')\n                                                   .selectAll('g.fake-circle')\n                                                   .data(textPlaceHoldingCircleNodes)\n                                                   .enter()\n                                                     .append('g')\n                                                     .attr('class', 'fake-circle')\n                                                     .append('circle')\n                                                     .style('pointer-events', 'none')\n                                                     .attr('r', d => d.collideRadius)\n                                                     .attr('cx', d => d.x)\n                                                     .attr('cy', d => d.x)\n                                                     .attr('fill-opacity', 0)\n                                                     .attr('stroke', '#000000')\n                                                     .attr('stroke-opacity', 0)\n                                                     .attr('dad-name', d => d.dad.name)\n\n  const blipsAndTextPlaceHoldingCircleNodes: CollideAvoidNode[] = (enhancedBlips as CollideAvoidNode[]).concat(\n    textPlaceHoldingCircleNodes as CollideAvoidNode[]\n  )\n  const collideAvoidSimulation = d3.forceSimulation(blipsAndTextPlaceHoldingCircleNodes)\n                        .force('collide', d3.forceCollide(d => (d as BlipSimulationNode).collideRadius).strength(0.999))\n                        .force('position-placeholding-circles', forceOfPlaceholdingCirclesTailingDad())\n                        .on('tick', positionSymbolAndText(true))\n                        .alphaDecay(0.01)\n\n  return { radialSimulation, collideAvoidSimulation }\n}\n","import { BlipSimulationNode } from \"./DrawBlips\"\n\nexport default () => {\n  let nodes: BlipSimulationNode[]\n  const BOUNDARY_PADDING = 12\n\n  const force = () => {\n    nodes.forEach(node => {\n      const quadrantIndex = node.quadrantIndex\n      if (quadrantIndex === 0 ) {\n        node.x = Math.max(BOUNDARY_PADDING, node.x)\n        node.y = Math.min(-BOUNDARY_PADDING, node.y)\n      } else if (quadrantIndex === 1) {\n        node.x = Math.max(BOUNDARY_PADDING, node.x)\n        node.y = Math.max(BOUNDARY_PADDING, node.y)\n      } else if (quadrantIndex === 2) {\n        node.x = Math.min(-BOUNDARY_PADDING, node.x)\n        node.y = Math.max(BOUNDARY_PADDING, node.y)\n      } else {\n        node.x = Math.min(-BOUNDARY_PADDING, node.x)\n        node.y = Math.min(-BOUNDARY_PADDING, node.y)\n      }\n    })\n  }\n\n  force.initialize = (_: BlipSimulationNode[]) => nodes = _\n\n  return force\n}\n","import { TextPlaceholdingCircleSimulationNode } from \"./DrawBlips\"\n\nexport default () => {\n  let nodes: TextPlaceholdingCircleSimulationNode[]\n  const force = () => {\n    nodes.forEach(node => {\n      if (node.hasOwnProperty('name')){\n        return\n      }\n      const dadX = node.dad.x + node.dad.vx\n      const dadY = node.dad.y + node.dad.vy\n      const dadCollideRadius = node.dad.collideRadius\n      const quadrantIndex = node.dad.quadrantIndex\n      const nodeCollideRadius = node.collideRadius\n\n      if (quadrantIndex === 0 ) {\n        node.x = dadX + dadCollideRadius + node.nth * nodeCollideRadius * 2 + nodeCollideRadius\n        node.y = dadY - nodeCollideRadius / 2\n      } else if (quadrantIndex === 1) {\n        node.x = dadX + dadCollideRadius + node.nth * nodeCollideRadius * 2 + nodeCollideRadius\n        node.y = dadY + nodeCollideRadius / 2\n      } else if (quadrantIndex === 2) {\n        node.x = dadX - (dadCollideRadius + node.nth * nodeCollideRadius * 2 + nodeCollideRadius)\n        node.y = dadY + nodeCollideRadius / 2\n      } else if (quadrantIndex === 3) {\n        node.x = dadX - (dadCollideRadius + node.nth * nodeCollideRadius * 2 + nodeCollideRadius)\n        node.y = dadY - nodeCollideRadius / 2\n      }\n    })\n  }\n\n  force.initialize = (_: TextPlaceholdingCircleSimulationNode[]) => nodes = _\n\n  return force\n}\n","import React, { Component } from 'react'\nimport * as d3 from 'd3'\n\nimport DetailSection from './DetailSection'\n\nimport initateSvg from './d3/InitateSvg'\nimport drawBackgroundCirclesAndAxis from './d3/DrawBackgroundCirclesAndAxis'\nimport drawQuadrantLabels from './d3/DrawQuadrantLabels'\nimport drawBlips, { BlipSimulationNode, CollideAvoidNode } from './d3/DrawBlips'\n\nimport './index.css'\nimport { Simulation } from 'd3-force'\n\nexport interface Blip {\n  quadrant: string,\n  name: string,\n  score: number,\n  desc: string,\n}\n\ninterface RadarState {\n  clickedBlip: {\n    quadrant: string,\n    name: string,\n  },\n  highlightedQuadrantIndex: number,\n}\n\nexport default class Radar extends Component<{ blips: Blip[] }, RadarState>  {\n  svgId: string\n  simulationRefs: {\n    radialSimulation: Simulation<BlipSimulationNode, undefined>,\n    collideAvoidSimulation: Simulation<CollideAvoidNode, undefined>,\n  }\n  rootSVGGroupToDraw: d3.Selection<SVGGElement, unknown, HTMLElement, any>\n\n  constructor(props: { blips: Blip[] }) {\n    super(props)\n\n    this.svgId = 'radar-chart-svg'\n    this.simulationRefs = {\n      radialSimulation: d3.forceSimulation(),\n      collideAvoidSimulation: d3.forceSimulation(),\n    }\n    this.rootSVGGroupToDraw = d3.select('_')\n\n    this.state = {\n      clickedBlip: { quadrant: '_', name: '_' },\n      highlightedQuadrantIndex: 0,\n    }\n\n    this.clickOnBlip = this.clickOnBlip.bind(this)\n  }\n\n  get quadrantNames() {\n    return [...Array.from(new Set<string>(this.props.blips.map(blip => blip.quadrant)))]\n  }\n\n  get dimensionalSizes() {\n    const DEFAULT_RADAR_WIDTH = 800, DEFAULT_RADAR_HEIGHT = 600\n\n    let width = DEFAULT_RADAR_WIDTH, height = DEFAULT_RADAR_HEIGHT\n    let radius = Math.min(width / 2, height / 2) * 0.95\n\n    return { width, height, radius }\n  }\n\n  clickOnBlip(quadrant: string, name: string){\n    const { quadrant: prevQuadrant, name: prevName } = this.state.clickedBlip\n    if (prevQuadrant === quadrant && prevName === name) {\n      this.setState({ clickedBlip: { quadrant: '', name: '' } })\n      return\n    }\n    this.setState({ clickedBlip: { quadrant, name } })\n  }\n\n  drawSVGBackground() {\n    const { svgId } = this\n    const { width, height, radius } = this.dimensionalSizes\n\n    const toHighlightQuadrant = (quadrantIndex: number) => {\n      this.setState({ highlightedQuadrantIndex: quadrantIndex })\n    }\n\n    this.rootSVGGroupToDraw = initateSvg(svgId, width, height)\n    drawBackgroundCirclesAndAxis(\n      this.rootSVGGroupToDraw,\n      width,\n      height,\n      radius,\n      this.quadrantNames,\n      toHighlightQuadrant\n    )\n  }\n\n  drawQuadrantLabelsAndBlips() {\n    const { blips } = this.props\n    const { radius } = this.dimensionalSizes\n    const { radialSimulation, collideAvoidSimulation } = this.simulationRefs\n\n    radialSimulation.stop()\n    collideAvoidSimulation.stop()\n\n    const highlightQuadrant = (quadrantIndex: number) => this.setState({ highlightedQuadrantIndex: quadrantIndex })\n\n    drawQuadrantLabels(\n      this.rootSVGGroupToDraw,\n      radius,\n      this.quadrantNames,\n      highlightQuadrant\n    )\n\n    const newSimulations = drawBlips(\n      this.rootSVGGroupToDraw,\n      radius,\n      blips,\n      highlightQuadrant,\n      this.clickOnBlip\n    )\n    this.simulationRefs.radialSimulation = newSimulations.radialSimulation\n    this.simulationRefs.collideAvoidSimulation = newSimulations.collideAvoidSimulation\n  }\n\n  componentDidMount() {\n    this.drawSVGBackground()\n    this.drawQuadrantLabelsAndBlips()\n  }\n\n  componentDidUpdate(prevProps: { blips: Blip[] }) {\n    if (this.props.blips !== prevProps.blips) {\n      this.drawQuadrantLabelsAndBlips()\n    }\n  }\n\n  detailedSection(quadrantIndex: number) {\n    const { blips } = this.props\n    const { highlightedQuadrantIndex, clickedBlip } = this.state\n\n    return (\n      <DetailSection\n        key={quadrantIndex}\n        expand={highlightedQuadrantIndex === quadrantIndex}\n        quadrantName={this.quadrantNames[quadrantIndex]}\n        onClickBlip={this.clickOnBlip}\n        entries={blips.filter(blip => blip.quadrant === this.quadrantNames[quadrantIndex])}\n        clickedBlip={clickedBlip}\n        flipped={quadrantIndex === 2 || quadrantIndex === 3}\n      />\n    )\n  }\n\n\n  render() {\n    const { svgId } = this\n\n    return (\n      <div className='Radar-root'>\n        {[3, 2].map(index => this.detailedSection(index))}\n        <div>\n          <svg id={svgId} />\n        </div>\n        {[0, 1].map(index => this.detailedSection(index))}\n      </div>\n    )\n  }\n}\n","import * as d3 from 'd3'\n\nexport default (\n  svgId: string, \n  width: number, \n  height: number\n): d3.Selection<SVGGElement, unknown, HTMLElement, any> => {\n  const svg = d3.select(`#${svgId}`)\n                  .attr('id', svgId)\n                  .attr('width', width)\n                  .attr('height', height)\n                  .style('user-select', 'none')\n  \n  svg.select('g').remove()\n  \n  const rootSvgGroupToDraw = svg.append('g')\n                               .attr('transform', `translate(${width/2}, ${height/2})`)\n  \n  return rootSvgGroupToDraw\n}\n","import {\n  hoverInQuadrantEffect, \n  hoverOutQuadrantEffect\n} from './QuadrantHoverEffect'\n\n\nexport default (\n  rootSVGGroupToDraw: d3.Selection<SVGGElement, unknown, HTMLElement, any>, \n  radius: number, \n  quadrantNames: string[],\n  hoverOnQuadrant: (quadrantIndex: number) => void\n): void => {\n  const quadrantLabelsG = rootSVGGroupToDraw.append('g').attr('class', 'quadrant-labels')\n\n  const eachQuadrantLabel = quadrantLabelsG.selectAll('text')\n                                           .data(quadrantNames)\n                                           .enter()\n                                             .append('text')\n                                             .attr('class', (d, i) => `quadrant-label-${i}`)\n                                             .attr('x', (d, i) => Math.sin(Math.PI/4) * radius * (i === 0 || i === 1 ? 1 : -1))\n                                             .attr('y', (d, i) => Math.sin(Math.PI/4) * radius * (i === 1 || i === 2 ? 1 : -1))\n                                             .attr('font-size', '1.5em')\n                                             .attr('font-weight', 200)\n                                             .text(d => d.toUpperCase())\n                                             .on('mouseover', (d, i) => {\n                                               hoverInQuadrantEffect(rootSVGGroupToDraw, i)\n                                               hoverOnQuadrant(i)\n                                             })\n                                             .on('mouseout', (d, i) => {\n                                               hoverOutQuadrantEffect(rootSVGGroupToDraw, i)\n                                             })\n\n  const quadrantLabelBBox = (index: number) => eachQuadrantLabel.nodes()[index].getBBox()\n\n  eachQuadrantLabel.attr('dx', (d, i) =>  (i === 0 || i === 1 ? 0 : -quadrantLabelBBox(i).width))\n  eachQuadrantLabel.attr('dy', (d, i) =>  (i === 0 || i === 3 ? 0 : 0.5 * quadrantLabelBBox(i).height))\n}\n","import React, { FC } from 'react'\nimport Radar from './components/Radar'\nimport './App.css'\n\n\nconst defaultBlips = [ // make desc compusaory\n  { quadrant: 'Thanos', name: 'Nagging', score: 5, desc: 'Fun isn\\'t something one considers when balancing the universe.'},\n  { quadrant: 'Thanos', name: 'Snap finger', score: 5, desc: 'You\\'re strong. But I could snap my fingers, and you\\'d all cease to exist.'},\n  { quadrant: 'Thanos', name: 'Immortal', score: 5, desc: 'Fun isn\\'t something one considers when balancing the universe. But this... does put a smile on my face.'},\n  { quadrant: 'Thanos', name: 'Telekinesis', score: 2, desc: 'Come. Let me help you.'},\n  { quadrant: 'Thanos', name: 'Obsession with earth', score: 2, desc: 'To feel so desperately that you\\'re right, yet to fail nonetheless.'},\n  { quadrant: 'Thanos', name: 'Telepathy', score: 2, desc: 'You should have gone for the head.'},\n  { quadrant: 'Thanos', name: 'Strategy', score: 1, desc: 'When I\\'m done, half of humanity will still exist. Perfectly balanced'},\n\n  { quadrant: 'Deadpool', name: 'Break 4th wall', score: 5, desc: 'No. You\\'re blind.'},\n  { quadrant: 'Deadpool', name: 'Pain insensitve', score: 4, desc: 'Oh, hello there! I bet you\\'re wondering, why the red suit? Well, that\\'s so bad guys can\\'t see me bleed!'},\n  { quadrant: 'Deadpool', name: 'Swording', score: 4, desc: 'Listen, the day I decide to become a crime-fighting shit swizzler who rooms with ava bunch of other little whiners at the Neverland Mansion of some creepy, old, bald, Heaven\\'s Gate-looking motherfucker…'},\n  { quadrant: 'Deadpool', name: 'Multilingual', score: 4, desc: 'Sorry, I use humor to deflect my insecurities.'},\n  { quadrant: 'Deadpool', name: 'Accelerated healing', score: 3, desc: 'Yeah. That is a gun in my pants. But that doesn\\'t mean I\\'m not happy to see you...'},\n  { quadrant: 'Deadpool', name: 'Gun shooting', score: 3, desc: 'You can\\'t buy love, but you can rent it for three minutes!'},\n  { quadrant: 'Deadpool', name: 'Savate', score: 3, desc: 'Never underestimate the stupidity of idiots.'},\n  { quadrant: 'Deadpool', name: 'Kniving', score: 3, desc: 'Four or five moments'},\n  { quadrant: 'Deadpool', name: 'Immortal', score: 2, desc: 'I want to die a natural death at the age of 102 – like the city of Detroit.'},\n  { quadrant: 'Deadpool', name: 'Assassination', score: 2, desc: 'Okay guys, I only have twelve bullets, so you\\'re all going to have to share!'},\n\n  { quadrant: 'Iron Man', name: 'Rich', score: 5, desc: 'I am definitely richer than Batman'},\n  { quadrant: 'Iron Man', name: 'Armoring', score: 5, desc: 'I did you a big favor. I have successfully privatized world peace. What more do you want?'},\n  { quadrant: 'Iron Man', name: 'Computer Science', score: 4, desc: 'Following\\'s not really my style.'},\n  { quadrant: 'Iron Man', name: 'Quantum Mechanics', score: 4, desc: 'Stay out-of-the-way.'},\n  { quadrant: 'Iron Man', name: 'Electrical Engineering', score: 3, desc: 'It\\'s working. We\\'re safe. America is secure.'},\n  { quadrant: 'Iron Man', name: 'Fly', score: 2, desc: 'Jarvis, sometimes you gotta run before you can walk.'},\n  { quadrant: 'Iron Man', name: 'Mathematics', score: 2, desc: '1 + 1 ≠ 2'},\n  { quadrant: 'Iron Man', name: 'Physics', score: 2, desc: 'I told you, I don\\'t want to join your super secret boy band.'},\n  { quadrant: 'Iron Man', name: 'Mechanical Engineering', score: 2, desc: 'My name is Tony Stark and I\\'m not afraid of you.'},\n  { quadrant: 'Iron Man', name: 'AI', score: 2, desc: 'I am Iron Man'},\n\n  { quadrant: 'Black Widow', name: 'Freelancing', score: 5, desc: 'I\\'m multitasking.'},\n  { quadrant: 'Black Widow', name: 'Psychological Manipulation', score: 5, desc: 'The person who developed this is slightly smarter than me. Slightly.'},\n  { quadrant: 'Black Widow', name: 'Kong Fu', score: 5, desc: 'I\\'m sorry. Did I step on your moment?'},\n  { quadrant: 'Black Widow', name: 'Ballerina', score: 4, desc: 'I only ACT like I know everything.'},\n  { quadrant: 'Black Widow', name: 'Judo', score: 4, desc: 'He\\'s also a huge dork. Chicks dig that!'},\n  { quadrant: 'Black Widow', name: 'Karate', score: 4, desc: 'Eyes on the road.'},\n  { quadrant: 'Black Widow', name: 'Ageless', score: 3, desc: 'It was quite the buzz around here, finding you in the ice. I thought Coulson was gonna swoon.'},\n  { quadrant: 'Black Widow', name: 'Kenpo', score: 3, desc: 'I\\'ll brief you on everything when you get back. But first, we need you to talk to the big guy.'},\n  { quadrant: 'Black Widow', name: 'Savate', score: 5, desc: 'Loki is beyond reason, but he is of Asgard and he is my brother!'},\n  { quadrant: 'Black Widow', name: 'Ninjutsu', score: 3, desc: 'Most of the intelligence community doesn\\'t believe he exists. The ones that do call him the Winter Soldier. He\\'s a ghost. You\\'ll never find him.'},\n  { quadrant: 'Black Widow', name: 'Aikido', score: 2, desc: 'When I first joined S.H.I.E.L.D., I thought it was going straight. But I guess I just traded in the KGB for HYDRA.'},\n  { quadrant: 'Black Widow', name: 'Sambo', score: 2, desc: 'Public displays of affection make people uncomfortable.'},\n  { quadrant: 'Black Widow', name: 'Boxing', score: 1, desc: 'Bye bye, bikinis'},\n]\n\nconst App: FC = () => (\n  <div className='App-root'>\n    <Radar blips={ defaultBlips } />\n  </div>\n)\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}